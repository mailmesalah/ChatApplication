/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jachat;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

/**
 *
 * @author Sely
 */
public class JFWindow extends javax.swing.JFrame {

    /**
     * Creates new form JFWindow
     */
    private ServerSocket ss;
    private SendDataToServer sts;

    public JFWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSPBoard = new javax.swing.JScrollPane();
        jTABoard = new javax.swing.JTextArea();
        jSPEditBox = new javax.swing.JScrollPane();
        jTAEditBox = new javax.swing.JTextArea();
        jTFUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTFIPAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFLocalPort = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTFRemotePort = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jBConnect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat");

        jTABoard.setEditable(false);
        jTABoard.setColumns(20);
        jTABoard.setRows(5);
        jSPBoard.setViewportView(jTABoard);

        jTAEditBox.setColumns(20);
        jTAEditBox.setRows(5);
        jTAEditBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTAEditBoxKeyPressed(evt);
            }
        });
        jSPEditBox.setViewportView(jTAEditBox);

        jLabel1.setText("Username");

        jLabel2.setText("IP Address");

        jLabel3.setText("Local Port No");

        jLabel4.setText("Remote Port No");

        jBConnect.setText("Connect");
        jBConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConnectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSPEditBox, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                    .addComponent(jSPBoard))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTFRemotePort, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jTFLocalPort, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jTFUsername)
                    .addComponent(jTFIPAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jBConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSPBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFIPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFLocalPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFRemotePort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(22, 22, 22)
                        .addComponent(jBConnect)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSPEditBox, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTAEditBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAEditBoxKeyPressed
        // TODO add your handling code here:       	
        if (evt.getKeyCode() == 10 && jBConnect.getText().equals("Connected") ) {
            sts.sendToServer();
            jTABoard.append("\n" +jTAEditBox.getText());
            jTAEditBox.setText(null);
        }
    }//GEN-LAST:event_jTAEditBoxKeyPressed

    private void jBConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConnectActionPerformed
    	
    	switch (jBConnect.getText()) {
        case "Connect":
        	try {
                ss = new ServerSocket(Integer.parseInt(jTFLocalPort.getText()));
                jBConnect.setText("Ready!");
            } catch (IOException ex) {
                Logger.getLogger(JFWindow.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Cannot Connect!");
            }
            
            break;
        case "Ready!":
            try {
				sts = new SendDataToServer(jTFUsername.getText(), jTFIPAddress.getText(), Integer.parseInt(jTFRemotePort.getText()));
				jBConnect.setText("Connected");
			} catch (NumberFormatException | IOException e) {								
				e.printStackTrace();
				JOptionPane.showMessageDialog(null, "Cannot Connect!");
			}
            
            break;
    	}
    	
        

        try {
            // TODO add your handling code here:
            new PrintIncomingData(jTFUsername.getText(), ss).start();
        } catch (Exception ex) {
            Logger.getLogger(JFWindow.class.getName()).log(Level.SEVERE, null, ex);
        }




    }//GEN-LAST:event_jBConnectActionPerformed

    class PrintIncomingData extends Thread {

        private ServerSocket serSoc = null;
        private Socket soc = null;
        private String s = "Default String";
        private String userName = "Not yet loged In !";

        public PrintIncomingData(String userName, ServerSocket serSoc) throws Exception {
            this.serSoc = serSoc;
            this.userName = userName;
        }

        @Override
        public void run() {
            waitForIncomingData();
        }

        private void waitForIncomingData() {
            try {
                soc = serSoc.accept();
                while (true) {
                    try {
                        s = (String) new ObjectInputStream(soc.getInputStream()).readObject();
                        jTABoard.append("\n" + s);
                    } catch (IOException | ClassNotFoundException e) {
                        System.out.println(e);
                    }
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }

    class SendDataToServer {

        private Socket soc = null;
        private String userName = "Not yet loged In !";
        private String s = "Default String";
        private ObjectOutputStream output;

        public SendDataToServer(String userName, String ipAddress, int remortPortNo) throws UnknownHostException, IOException {
            
                soc = new Socket(ipAddress, remortPortNo);
                this.userName = userName;
            
        }

        public void sendToServer() {
            try {

                s = jTFUsername.getText() + " : " + jTAEditBox.getText();
                output = new ObjectOutputStream(soc.getOutputStream());
                output.flush();
                output.writeObject(s);
                output.flush();

            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        	System.out.println(ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JFWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBConnect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jSPBoard;
    private javax.swing.JScrollPane jSPEditBox;
    private javax.swing.JTextArea jTABoard;
    private javax.swing.JTextArea jTAEditBox;
    private javax.swing.JTextField jTFIPAddress;
    private javax.swing.JTextField jTFLocalPort;
    private javax.swing.JTextField jTFRemotePort;
    private javax.swing.JTextField jTFUsername;
    // End of variables declaration//GEN-END:variables
}
